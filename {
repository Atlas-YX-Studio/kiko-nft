Script started on Thu Sep 16 14:47:43 2021
[0m[49m[39m[27m[24m[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                       [0m[49m[39m[27m[24m[K
[1A7[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[49m[34m[0m[34m[49m[39m [0m[49m[39m                                                                                                                                                                                                                                                              [0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:47:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[0m[49m[39m[27m[24m[38C[?25l8[0m[49m[39m[27m[24m[J]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[38;5;254m[49m[39m[27m[24m[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                       [0m[49m[39m[27m[24m[K[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[100m[34m[0m[34m[100m[100m[30m on  [30m main[0m[30m[100m[100m[30m [0m[30m[100m[49m[90m[0m[90m[49m[39m [0m[49m[39m[K[241C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:47:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[260D[?1h=[?12l[?25h[?2004h[?25l[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:47:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?12l[?25h[32mscript[39m [4m{[24m[8D[1m[31ma[1m[31md[1m[31md[1m[31mr[1m[31me[1m[31ms[1m[31ms[0m[39m[24m bob = {{bob}};[22D[1m[31m/[1m[31m/[1m[31m![0m[39m[0m[39m [0m[39ms[0m[39me[0m[39mnder: bob       [11Daccount: bob, 0x77[18Dnew-transaction    [90mn[39m [39m [90mon[39m [39m [39m [90mion[39m [39m [39m [39m [90mtion[39m [39m [39m [39m [39m [90mction[39m [39m [39m [39m [39m [39m [90maction[39m [39m [39m [39m [39m [39m [39m [90msaction[39m [39m [39m [39m [39m [39m [39m [39m [8D[90mnsaction[39m[8D [39m [39m [39m [39m [39m [39m [39m [39m [9D[90mansaction[39m[9D [39m [39m [39m [39m [39m [39m [39m [39m [39m [10D[90mransaction[39m[10D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [11D[90mtransaction[39m[11D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [12D[90m-transaction[39m[12D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [13D[90mw-transaction[39m[13D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [14D[90mew-transaction[39m[14D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [15D[90msender: bob[39m[11D[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [12D[90m sender: bob[39m[12D[0m[4m[32m/[0m[4m[32m/[24m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [13D[90m! sender: bob[39m[13D[4m[32m/[24m[39m[24m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [14D[4m[32m/[24m[39m[90m/! sender: bob[39m[14D[24m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [15D[1m[31mm[0m[39m[1m[31mm[0m[39m[90move functional-test Box[39m[23D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mf[39mu[39mn[39mc[39mt[39mi[39mo[39mn[39ma[39ml[39m-[39mt[39me[39ms[39mt[39m [39mB[39mo[39mx[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(3),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    139 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:48:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 2
[debug] 0
[debug] 200000000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fe64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0201000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 433950,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 538027,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(3),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 433950, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 538027, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    139 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:48:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 1
[debug] 0
[debug] 200000000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:48:58[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110100000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(ff64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0101000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 350832,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(0),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] Error: an error occurred when executing the transaction, vm status ABORTED { code: 200009, location: 0x00000000000000000000000000000222::NFTMarket }, txn status Keep(ABORTED { code: 200009, location: 0x00000000000000000000000000000222::NFTMarket })
    [39] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 350832, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [38] VMExecutionFailure(ABORTED { code: 200009, location: 0x0000000000000000000000000...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:49:12[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(5),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    139 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:50:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mm[0m[39m[1m[31mm[0m[39m[90move functional-test Box[39m[23D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mc[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [18D[90mlean[39m[39ml[39me[39ma[39mn[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:50:23[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:50:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:50:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:50:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[24D[32ms[32mc[32mr[32mi[32mp[32mt[39m [4m{[24m                [16D[8D[1m[31ma[1m[31md[1m[31md[1m[31mr[1m[31me[1m[31ms[1m[31ms[0m[39m[24m bob = {{bob}}; [90m;[39m [39m [90m};[39m [39m [39m [90m}};[39m [39m [39m [39m [90mb}};[39m [39m [39m [39m [39m [90mob}};[39m [39m [39m [39m [39m [39m [90mbob}};[39m[4m{[24m [39m [39m [39m [39m [39m [39m [90m{bob}};[39m[24m [39m [39m [39m [39m [39m [39m [39m [8D[90m{{bob}};[39m[8D[39m [39m [39m [39m [39m [39m [39m [39m [9D[90m {{bob}};[39m[9D [39m [39m [39m [39m [39m [39m [39m [39m [39m [10D[90m= {{bob}};[39m[10D[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [11D[90m = {{bob}};[39m[11D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [12D[90mb = {{bob}};[39m[12D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [13D[90mob = {{bob}};[39m[13D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [14D[90mbob = {{bob}};[39m[14D[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [15D[90m bob = {{bob}};[39m[15D[1m[31ms[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [16D[90ms bob = {{bob}};[39m[16D[1m[31me[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [17D[90mss bob = {{bob}};[39m[17D[1m[31mr[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [18D[90mess bob = {{bob}};[39m[18D[1m[31md[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [19D[90mress bob = {{bob}};[39m[19D[1m[31ma[1m[31md[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [20D[90mdress bob = {{bob}};[39m[20D[1m[31ma[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [21D[1m[31ma[0m[39m[90mddress bob = {{bob}};[39m[21D[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [22D[1m[31mm[0m[39m[1m[31mm[0m[39m[90move clean[39m[9D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mp[39m [39m [39m [39m [90mublish[39m[39mu[39mb[39ml[39mi[39ms[39mh[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:50:36[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mm[0m[39m[1m[31mm[0m[39m[90move publish[39m[11D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mf[39m [39m [39m [39m [39m [39m [90munctional-test Box[39m[18D[39mu[39mn[39mc[39mt[39mi[39mo[39mn[39ma[39ml[39m-[39mt[39me[39ms[39mt[39m [39mB[39mo[39mx[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(5),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    139 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:50:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 2
[debug] 0
[debug] 500000000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:51:35[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 2
[debug] 0
[debug] 500000000
[debug] 1
[debug] 0
[debug] 900000000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:51:48[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:53:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[224C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[33m[0m[33m[40m[43m[30m took 3s[0m[30m[43m[43m[30m [0m[30m[43m[43m[30m [0m[30m[43m[43m[30m[37m[0m[37m[43m[47m[30m at 14:53:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:53:50[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:05[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Error: VerificationError(ERROR { status_code: MISSING_DEPENDENCY })
    [21] Status: Failure
    [22] Transaction 3
    [23] Stage: Compiler
    [24] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [25] Stage: Verifier
    [26] Error: VerificationError(ERROR { status_code: MISSING_DEPENDENCY })
    [27] Status: Failure
    [28] Transaction 4
    [29] Stage: Compiler
    [30] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [31] Stage: Verifier
    [32] Error: VerificationError(ERROR { status_code: MISSING_DEPENDENCY })
    [33] Status: Failure
    [34] Transaction 5
    [35] Stage: Compiler
    [36] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [37] Stage: Verifier
    [38] Error: VerificationError(ERROR { status_code: MISSING_DEPENDENCY })
    [39] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    77 | // check: [0m[4m"Keep(EXECUTED)"[0m
    99 | // check: [0m[4mEXECUTED[0m
    119 | // check: [0m[4mEXECUTED[0m
    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [20] VerificationError(ERROR { status_code: MISSING_DEPENDENCY })
    [26] VerificationError(ERROR { status_code: MISSING_DEPENDENCY })
    [32] VerificationError(ERROR { status_code: MISSING_DEPENDENCY })
    [38] VerificationError(ERROR { status_code: MISSING_DEPENDENCY })

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:55:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dclean              [14D[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:11[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dclean              [14D[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:13[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dclean              [14Dfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[224C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[33m[0m[33m[40m[43m[30m took 3s[0m[30m[43m[43m[30m [0m[30m[43m[43m[30m [0m[30m[43m[43m[30m[37m[0m[37m[43m[47m[30m at 14:55:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 2
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:55:23[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mc[0m[39m[1m[31mc[0m[39m[90mlear[39m[1m[31mc[1m[31ml[0m[39m[1m[31mc[1m[31ml[1m[31me[0m[39m[1m[31me[1m[31ma[0m[39m[0m[32mc[0m[32ml[0m[32me[0m[32ma[32mr[39m[?1l>[?2004l
]2;clear]1;clear[H[2J[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mc[0m[39m[1m[31mc[0m[39m[90mlear[39m[1m[31mc[1m[31ml[0m[39m[90ml[90me[90ma[90mr[39m[39m;[39m [39m [39m [1m[31me[0m[39m[1m[31me[1m[31m\[0m[39m[1m[31me[0m[39m[0m[39m [0m[39m  [90mear[39m[1m[31mc[0m[39m[0m[39m [39m [39m [39m [1m[31mc[0m[39m[90mlear[39m[0m[39m [39m [39m [39m [39m [1m[31mc[0m[39m[1m[31mc[0m[39m[90mlear[39m[1m[31mc[1m[31ml[0m[39m[0m[32mc[0m[32ml[32me[32ma[32mr[39m[?1l>[?2004l
]2;clear]1;clear[H[2J[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:55:50[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mm[0m[39m[1m[31mm[0m[39m[90move functional-test Box[39m[23D[1m[31mm[1m[31mo[0m[39m[0m[32mm[0m[32mo[32mv[32me[39m[39m [39mf[39mu[39mn[39mc[39mt[39mi[39mo[39mn[39ma[39ml[39m-[39mt[39me[39ms[39mt[39m [39mB[39mo[39mx[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 2
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:55:55[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[24D[32mc[32ml[32me[32ma[32mr[39m                   [19D[32mm[32mo[32mv[32me[39m[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:21[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:21[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:21[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:21[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:21[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[24D[32mc[32ml[32me[32ma[32mr[39m                   [19D[32mm[32mo[32mv[32me[39m[39m functional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:26[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:27[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:27[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:27[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:27[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:27[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:29[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:57:31[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 2
[debug] 6
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:57:35[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:52[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:53[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:53[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:53[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:53[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:57[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:58[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:58[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:58[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:58[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:58:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:02[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 2
[debug] 6
[debug] 1000000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 14:59:06[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 14:59:54[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:00:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000
[debug] 2
[debug] 6
[debug] 1000000
[debug] 500000000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:00:04[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:00:58[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:01:04[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 200000000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0065cd1d00000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0094357700000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(fd64cd1d000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00943577000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0301000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "0065cd1d000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00943577000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        225,
                        245,
                        5,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0046c32300000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0056218300000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(01e1f505000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00562183000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(020200000000000000000000000000000000000000000000000000000000000111010000000000000000000000000000000065cd1d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000000e9a435000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00e1f505000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "00c2eb0b000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445400c2eb0b0000000000000000000000000000000000000000000000000000006600c2eb0b000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000000c2eb0b00000000000000000000000000c2eb0b00000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] Error: 
    
    [0m[1m[38;5;9merror[0m[1m: [0m
    
        [0m[34m┌[0m[0m[34m──[0m /var/folders/f5/d37blrjj6rl_4pjxpbzj6q0h0000gn/T/.tmp94FFBS:11:64 [0m[34m───[0m
        [0m[34m│[0m
     [0m[34m11[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[31m)[0m;
        [0m[34m│[0m                                                                [0m[31m^ Unexpected ')'[0m
        [0m[34m·[0m
     [0m[34m11[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[34m)[0m;
        [0m[34m│[0m                                                                [0m[34m- Expected ';'[0m
        [0m[34m│[0m
    
    
    
    [43] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [42] MoveSourceCompilerError("\u{1b}[0m\u{1b}[1m\u{1b}[38;5;9merror\u{1b}[0m\u{1b}[1m...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:01:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] Error: 
    
    [0m[1m[38;5;9merror[0m[1m: [0m
    
        [0m[34m┌[0m[0m[34m──[0m /var/folders/f5/d37blrjj6rl_4pjxpbzj6q0h0000gn/T/.tmpCArVOx:11:64 [0m[34m───[0m
        [0m[34m│[0m
     [0m[34m11[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[31m)[0m;
        [0m[34m│[0m                                                                [0m[31m^ Unexpected ')'[0m
        [0m[34m·[0m
     [0m[34m11[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[34m)[0m;
        [0m[34m│[0m                                                                [0m[34m- Expected ';'[0m
        [0m[34m│[0m
    
    
    
    [43] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [42] MoveSourceCompilerError("\u{1b}[0m\u{1b}[1m\u{1b}[38;5;9merror\u{1b}[0m\u{1b}[1m...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:01[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:19[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:20[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:21[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004hmmov[32mm[32mo[32mv[32me[39m [90mfunctional-test Box[39m[19D[39mc[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [18D[90mlean[39m[39ml[39me[39ma[39mn[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:02:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mm[0m[39m[1m[31mm[0m[39m[90move clean[39m[9D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mp[39m [39m [39m [39m [90mublish[39m[39m [39m [39m [39m [39m [39m [?1l>[?2004l
]2;move p]1;move[1;31merror:[0m Found argument '[33mp[0m' which wasn't expected, or isn't valid in this context

USAGE:
    move [FLAGS] [OPTIONS] <SUBCOMMAND>

For more information try [32m--help[0m
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[233C[0m[49m[31m[0m[31m[41m[33m 1[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m pu[90mblish[39m[39mb[39ml[39mi[39ms[39mh[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:02:35[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mm[0m[39m[1m[31mm[0m[39m[90move publish[39m[11D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mf[39m [39m [39m [39m [39m [39m [90munctional-test Box[39m[18D[39mu[39mm[39mo[39mv[39me[3C[32mm[32mo[32mv[32me[39m[3C[39mn[39mc[39mt[39mi[39mo[39mn[39ma[39ml[39m-[39mt[39me[39ms[39mt[39m [39mB[39mo[39mx[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] Error: 
    
    [0m[1m[38;5;9merror[0m[1m: [0m
    
        [0m[34m┌[0m[0m[34m──[0m /var/folders/f5/d37blrjj6rl_4pjxpbzj6q0h0000gn/T/.tmpegrfeq:11:64 [0m[34m───[0m
        [0m[34m│[0m
     [0m[34m11[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[31m)[0m;
        [0m[34m│[0m                                                                [0m[31m^ Unexpected ')'[0m
        [0m[34m·[0m
     [0m[34m11[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[34m)[0m;
        [0m[34m│[0m                                                                [0m[34m- Expected ';'[0m
        [0m[34m│[0m
    
    
    
    [43] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    141 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [42] MoveSourceCompilerError("\u{1b}[0m\u{1b}[1m\u{1b}[38;5;9merror\u{1b}[0m\u{1b}[1m...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:02:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 0
[debug] 50000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:04:00[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 0
[debug] 50000
[debug] 1
[debug] 0
[debug] 90000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:04:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 0
[debug] 50000
[debug] 1
[debug] 0
[debug] 90000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 542693,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(3),
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(4),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status ABORTED { code: 51202567, location: 0x00000000000000000000000000000222::NFTMarket }, txn status Keep(ABORTED { code: 51202567, location: 0x00000000000000000000000000000222::NFTMarket })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 542693, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(ABORTED { code: 51202567, location: 0x00000000000000000000000...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:04:35[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12D      [?1l>[?2004l
]2;move p]1;move[1;31merror:[0m Found argument '[33mp[0m' which wasn't expected, or isn't valid in this context

USAGE:
    move [FLAGS] [OPTIONS] <SUBCOMMAND>

For more information try [32m--help[0m
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[233C[0m[49m[31m[0m[31m[41m[33m 1[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:06:03[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m pfunctional-test Box[19Dpublish            [12D      clean[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:06:07[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanp    functional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:06:12[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  p    functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 0
[debug] 50000
[debug] 1
[debug] 0
[debug] 90000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(3),
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(4),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status ABORTED { code: 200010, location: 0x00000000000000000000000000000222::NFTMarket }, txn status Keep(ABORTED { code: 200010, location: 0x00000000000000000000000000000222::NFTMarket })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(ABORTED { code: 200010, location: 0x0000000000000000000000000...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:06:18[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:39[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:39[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:39[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:40[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:41[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  p    functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] Error: 
    
    [0m[1m[38;5;9merror[0m[1m: [0m
    
        [0m[34m┌[0m[0m[34m──[0m /var/folders/f5/d37blrjj6rl_4pjxpbzj6q0h0000gn/T/.tmpgsqqoF:12:64 [0m[34m───[0m
        [0m[34m│[0m
     [0m[34m12[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[31m)[0m;
        [0m[34m│[0m                                                                [0m[31m^ Unexpected ')'[0m
        [0m[34m·[0m
     [0m[34m12[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6 * MULTIPLE)[0m[34m)[0m;
        [0m[34m│[0m                                                                [0m[34m- Expected ';'[0m
        [0m[34m│[0m
    
    
    
    [43] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [42] MoveSourceCompilerError("\u{1b}[0m\u{1b}[1m\u{1b}[38;5;9merror\u{1b}[0m\u{1b}[1m...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:07:50[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  p    functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] Error: 
    
    [0m[1m[38;5;9merror[0m[1m: [0m
    
        [0m[34m┌[0m[0m[34m──[0m /var/folders/f5/d37blrjj6rl_4pjxpbzj6q0h0000gn/T/.tmpdqZWi0:12:53 [0m[34m───[0m
        [0m[34m│[0m
     [0m[34m12[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6)[0m[31m)[0m;
        [0m[34m│[0m                                                     [0m[31m^ Unexpected ')'[0m
        [0m[34m·[0m
     [0m[34m12[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6)[0m[34m)[0m;
        [0m[34m│[0m                                                     [0m[34m- Expected ';'[0m
        [0m[34m│[0m
    
    
    
    [43] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [42] MoveSourceCompilerError("\u{1b}[0m\u{1b}[1m\u{1b}[38;5;9merror\u{1b}[0m\u{1b}[1m...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:08:53[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:11:12[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:11:12[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:11:12[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:11:13[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:11:17[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] Error: 
    
    [0m[1m[38;5;9merror[0m[1m: [0m
    
        [0m[34m┌[0m[0m[34m──[0m /var/folders/f5/d37blrjj6rl_4pjxpbzj6q0h0000gn/T/.tmpHy7mwd:12:53 [0m[34m───[0m
        [0m[34m│[0m
     [0m[34m12[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6)[0m[31m)[0m;
        [0m[34m│[0m                                                     [0m[31m^ Unexpected ')'[0m
        [0m[34m·[0m
     [0m[34m12[0m [0m[34m│[0m         NFTMarket::box_bid<ETH, USDT>(&sender, 2, 6)[0m[34m)[0m;
        [0m[34m│[0m                                                     [0m[34m- Expected ';'[0m
        [0m[34m│[0m
    
    
    
    [43] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [42] MoveSourceCompilerError("\u{1b}[0m\u{1b}[1m\u{1b}[38;5;9merror\u{1b}[0m\u{1b}[1m...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:11:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 6
[debug] 1000000
[debug] 50000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:11:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:42[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:43[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:46[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 6
[debug] 1000000
[debug] 50000
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:12:50[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:09[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:11[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:16:13[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Boxaaaaaaaaaaaaaaaaaaaaaa[?1l>[?2004l
]2;move functional-test Boxaaaaaaaaaaaaaaaaaaaaaa]1;movethread 'main' panicked at 'no test cases found for test 'functional-test'. Scanned directory: 'tests' with pattern 'Boxaaaaaaaaaaaaaaaaaaaaaa'', /Users/bixin/.cargo/git/checkouts/diem-devtools-42b6453568888d6a/8d13c49/datatest-stable/src/runner.rs:370:13
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Boxaaaaaaaaaaaaaaaaaaaaaa[41Dclean                                    [36Dfunctional-test Box[19Dclean              [14D[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:16:27[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Boxaaaaaaaaaaaaaaaaaaaaaa[41Dclean                                    [36D[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:16:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Boxaaaaaaaaaaaaaaaaaaaaaa[41Dclean                                    [36D[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:16:30[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Boxaaaaaaaaaaaaaaaaaaaaaa[41Dclean                                    [36Dfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[224C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[33m[0m[33m[40m[43m[30m took 3s[0m[30m[43m[43m[30m [0m[30m[43m[43m[30m [0m[30m[43m[43m[30m[37m[0m[37m[43m[47m[30m at 15:16:36[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Boxaaaaaaaaaaaaaaaaaaaaaa [90ma[39m [39m [90maa[39m [39m [39m [90maaa[39m [39m [39m [39m [90maaaa[39m [39m [39m [39m [39m [90maaaaa[39m [39m [39m [39m [39m [39m [90maaaaaa[39m [39m [39m [39m [39m [39m [39m [90maaaaaaa[39m [39m [39m [39m [39m [39m [39m [39m [8D[90maaaaaaaa[39m[8D [39m [39m [39m [39m [39m [39m [39m [39m [9D[90maaaaaaaaa[39m[9D [39m [39m [39m [39m [39m [39m [39m [39m [39m [10D[90maaaaaaaaaa[39m[10D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [11D[90maaaaaaaaaaa[39m[11D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [12D[90maaaaaaaaaaaa[39m[12D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [13D[90maaaaaaaaaaaaa[39m[13D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [14D[90maaaaaaaaaaaaaa[39m[14D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [15D[90maaaaaaaaaaaaaaa[39m[15D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [16D[90maaaaaaaaaaaaaaaa[39m[16D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [17D[90maaaaaaaaaaaaaaaaa[39m[17D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [18D[90maaaaaaaaaaaaaaaaaa[39m[18D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [19D[90maaaaaaaaaaaaaaaaaaa[39m[19D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [20D[90maaaaaaaaaaaaaaaaaaaa[39m[20D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [21D[90maaaaaaaaaaaaaaaaaaaaa[39m[21D [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [22D[90maaaaaaaaaaaaaaaaaaaaaa[39m[22D[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [22D[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 6
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [47] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [46] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:16:44[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:17:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:18:03[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l[24D[39mm[39mo[39mv[39me[20C
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 60000
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 666666666
[debug] 2
[debug] 0
[debug] 50000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:18:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31m\[0m[39m[0m[39m [1m[31mm[0m[39m[1m[31mm[0m[39m[90move functional-test Box[39m[23D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mc[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [18D[90mlean[39m[39ml[39me[39ma[39mn[?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:19:12[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[1m[31mm[0m[39m[1m[31mm[0m[39m[90move clean[39m[9D[1m[31mm[1m[31mo[0m[39m[1m[31mm[1m[31mo[1m[31mv[0m[39m[0m[32mm[0m[32mo[0m[32mv[32me[39m[39m [39mp[39m [39m [39m [39m [90mublish[39m[39mu[39mb[39ml[39mi[39ms[39mh[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:19:18[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 60000
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 666666666
[debug] 2
[debug] 0
[debug] 50000
[debug] 3
[debug] 60000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(7011010000000000000000000000000000ca9a3b000000000000000000000000030000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(a068060000000000000000000000000000ca9a3b000000000000000000000000030000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20c3a0e6c3fc5a877e246f717381ddda8f32834d4c0b5fec222608d040d2254c55010000000000000000000000000000007701000000000000000000000000000000770100000000000000180000000000000000000000000000000000000000000000770300000000000000180000000000000000000000000000000000000000000000770200000000000000180000000000000000000000000000000000000000000000770100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(f0490200000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110400000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(b01e0400000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(01030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000020000000000000018040000000000000000000000000000000000000000000222020000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 3, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445450c300000000000000000000000000000000000000000000000000000000007750c30000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000050c3000000000000000000000000000050c3000000000000000000000000000000000000000000000000000000000077" },
        ],
        gas_used: 559802,
        status: Keep(
            EXECUTED,
        ),
    }
    [47] Status: Success
    [48] Transaction 6
    [49] Stage: Compiler
    [50] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(3),
                    LdU128(6),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [51] Stage: Verifier
    [52] Stage: Serializer
    [53] Stage: Runtime
    [54] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [55] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m

    [46] ...as_used: 559802, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    165 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [54] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:19:24[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h                                                                                             [?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:14[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:15[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:15[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:15[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:15[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:15[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:15[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:16[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:16[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:20:18[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:20:23[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 60000
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 666666666
[debug] 2
[debug] 0
[debug] 50000
[debug] 3
[debug] 60000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 0

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(7011010000000000000000000000000000ca9a3b000000000000000000000000030000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(a068060000000000000000000000000000ca9a3b000000000000000000000000030000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20c3a0e6c3fc5a877e246f717381ddda8f32834d4c0b5fec222608d040d2254c55010000000000000000000000000000007701000000000000000000000000000000770100000000000000180000000000000000000000000000000000000000000000770300000000000000180000000000000000000000000000000000000000000000770200000000000000180000000000000000000000000000000000000000000000770100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(f0490200000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110400000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(b01e0400000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(01030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000020000000000000018040000000000000000000000000000000000000000000222020000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 3, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445450c300000000000000000000000000000000000000000000000000000000007750c30000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000050c3000000000000000000000000000050c3000000000000000000000000000000000000000000000000000000000077" },
        ],
        gas_used: 559802,
        status: Keep(
            EXECUTED,
        ),
    }
    [47] Status: Success
    [48] Transaction 6
    [49] Stage: Compiler
    [50] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(3),
                    LdU128(6),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [51] Stage: Verifier
    [52] Stage: Serializer
    [53] Stage: Runtime
    [54] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [55] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m

    [46] ...as_used: 559802, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    165 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [54] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:20:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:22:54[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:22:58[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 60000
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 666666666
[debug] 2
[debug] 0
[debug] 50000
[debug] 3
[debug] 60000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 0
[debug] 888888888
[debug] 23232323233
[debug] 56565656565

====================================================================================================
tests/testsuite/BoxTest.move

[0m[1m[33minfo: [0m[1mEvaluation Outputs
[0m    [0] Transaction 0
    [1] Stage: Compiler
    [2] CompiledModule(
        CompiledModuleMut {
            version: 2,
            self_module_handle_idx: ModuleHandleIndex(0),
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [Store, ],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(2),
                    abilities: [Store, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(14),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(15),
                    abilities: [Store, Key, ],
                    type_parameters: [
                        [],
                    ],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(0),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(8),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(9),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(10),
                    parameters: SignatureIndex(4),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(16),
                    parameters: SignatureIndex(8),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(17),
                    parameters: SignatureIndex(10),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(18),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(19),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(11),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(20),
                    parameters: SignatureIndex(2),
                    return_: SignatureIndex(12),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(21),
                    parameters: SignatureIndex(14),
                    return_: SignatureIndex(0),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(22),
                    parameters: SignatureIndex(15),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(11),
                    parameters: SignatureIndex(1),
                    return_: SignatureIndex(5),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            field_handles: [
                FieldHandle {
                    owner: StructDefinitionIndex(1),
                    field: 0,
                },
                FieldHandle {
                    owner: StructDefinitionIndex(2),
                    field: 0,
                },
            ],
            friend_decls: [],
            struct_def_instantiations: [
                StructDefInstantiation {
                    def: StructDefinitionIndex(1),
                    type_parameters: SignatureIndex(7),
                },
                StructDefInstantiation {
                    def: StructDefinitionIndex(2),
                    type_parameters: SignatureIndex(7),
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(4),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(5),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(6),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(7),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(8),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(9),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(10),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(2),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(11),
                    type_parameters: SignatureIndex(7),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(12),
                    type_parameters: SignatureIndex(7),
                },
            ],
            field_instantiations: [
                FieldInstantiation {
                    handle: FieldHandleIndex(0),
                    type_parameters: SignatureIndex(7),
                },
                FieldInstantiation {
                    handle: FieldHandleIndex(1),
                    type_parameters: SignatureIndex(7),
                },
            ],
            signatures: [
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Address,
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(1), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        TypeParameter(0),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(5), [TypeParameter(0)])),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U8,
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(2), [TypeParameter(0)])),
                    ],
                ),
                Signature(
                    [
                        Reference(StructInstantiation(StructHandleIndex(6), [TypeParameter(0)])),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        StructInstantiation(StructHandleIndex(4), [TypeParameter(0)]),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "Account",
                ),
                Identifier(
                    "Token",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "SharedBurnCapability",
                ),
                Identifier(
                    "SharedMintCapability",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "burn",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "mint",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "token_address",
                ),
                Identifier(
                    "dummy_field",
                ),
                Identifier(
                    "cap",
                ),
                Identifier(
                    "BurnCapability",
                ),
                Identifier(
                    "MintCapability",
                ),
                Identifier(
                    "burn_with_capability",
                ),
                Identifier(
                    "register_token",
                ),
                Identifier(
                    "do_accept_token",
                ),
                Identifier(
                    "remove_burn_capability",
                ),
                Identifier(
                    "remove_mint_capability",
                ),
                Identifier(
                    "mint_with_capability",
                ),
                Identifier(
                    "deposit_to_self",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
            ],
            constant_pool: [],
            struct_defs: [
                StructDefinition {
                    struct_handle: StructHandleIndex(0),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(1),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(5), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(2),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(13),
                                signature: TypeSignature(
                                    StructInstantiation(StructHandleIndex(6), [TypeParameter(0)]),
                                ),
                            },
                        ],
                    ),
                },
                StructDefinition {
                    struct_handle: StructHandleIndex(3),
                    field_information: Declared(
                        [
                            FieldDefinition {
                                name: IdentifierIndex(12),
                                signature: TypeSignature(
                                    Bool,
                                ),
                            },
                        ],
                    ),
                },
            ],
            function_defs: [
                FunctionDefinition {
                    function: FunctionHandleIndex(0),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(1),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(6),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(0)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(0)),
                                MoveLoc(0),
                                CallGeneric(1),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(1),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(9),
                            code: [
                                CopyLoc(0),
                                LdU8(9),
                                CallGeneric(2),
                                CopyLoc(0),
                                CallGeneric(3),
                                CopyLoc(0),
                                CallGeneric(4),
                                StLoc(1),
                                CopyLoc(0),
                                MoveLoc(1),
                                PackGeneric(0),
                                MoveToGeneric(StructDefInstantiationIndex(0)),
                                CopyLoc(0),
                                CallGeneric(5),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                PackGeneric(1),
                                MoveToGeneric(StructDefInstantiationIndex(1)),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(2),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(13),
                            code: [
                                CallGeneric(0),
                                ImmBorrowGlobalGeneric(StructDefInstantiationIndex(1)),
                                StLoc(1),
                                MoveLoc(1),
                                ImmBorrowFieldGeneric(FieldInstantiationIndex(1)),
                                CopyLoc(0),
                                CallGeneric(6),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(3),
                    visibility: Public,
                    acquires_global_resources: [
                        StructDefinitionIndex(2),
                    ],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(0),
                            code: [
                                CopyLoc(1),
                                CallGeneric(7),
                                StLoc(2),
                                MoveLoc(0),
                                MoveLoc(2),
                                CallGeneric(8),
                                Ret,
                            ],
                        },
                    ),
                },
                FunctionDefinition {
                    function: FunctionHandleIndex(4),
                    visibility: Public,
                    acquires_global_resources: [],
                    code: Some(
                        CodeUnit {
                            locals: SignatureIndex(1),
                            code: [
                                CallGeneric(9),
                                Ret,
                            ],
                        },
                    ),
                },
            ],
        },
    )
    [3] Stage: Verifier
    [4] Stage: Serializer
    [5] Stage: Runtime
    [6] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/0/Dummy,
                        Value(a11ceb0b020000000c01000602062103274e0475140589015a07e301aa02088d04200aad041c0bc904040ccd04760dc305040ec7050400000101010200030700000408010000050c0104000607000202040100020e0c0100020f0c0100000700010104000802010104000903000104000a04010104000b0105010402100801010402110a0101040112020101040213020b01040214020c010402150e00010401160f010104020b010501040407050706070707080709070a0702070b070c07010b040109000001060c010402060c04010501060b0101090001090002060b050109000b04010900020b050109000b0601090002060c02010b05010900010b0601090001060b0201090002060b060109000402060c0b040109000544756d6d79074163636f756e7405546f6b656e03455448145368617265644275726e4361706162696c697479145368617265644d696e744361706162696c6974790455534454046275726e0a696e697469616c697a65046d696e740a6d696e745f746f6b656e0d746f6b656e5f616464726573730b64756d6d795f6669656c64036361700e4275726e4361706162696c6974790e4d696e744361706162696c697479146275726e5f776974685f6361706162696c6974790e72656769737465725f746f6b656e0f646f5f6163636570745f746f6b656e1672656d6f76655f6275726e5f6361706162696c6974791672656d6f76655f6d696e745f6361706162696c697479146d696e745f776974685f6361706162696c6974790f6465706f7369745f746f5f73656c6600000000000000000000000000000002000000000000000000000000000000010002010c010102010d0b050109000202010d0b060109000302010c01010702070001000101060838003d000c010b0137000b003801020101000009140a00310938020a0038030a0038040c010a000b0139003f000a0038050c020b000b0239013f010202010001020d0838003d010c010b0137010a00380602030100010200070a0138070c020b000b02380802040100000102380902010002000007010700),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 9832,
        status: Keep(
            EXECUTED,
        ),
    }
    [7] Status: Success
    [8] Transaction 1
    [9] Stage: Compiler
    [10] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(1),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(2),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "initialize",
                ),
                Identifier(
                    "USDT",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        0,
                        202,
                        154,
                        59,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    CallGeneric(1),
                    Ret,
                ],
            },
        },
    )
    [11] Stage: Verifier
    [12] Stage: Serializer
    [13] Stage: Runtime
    [14] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20e836a0ff414903bbc96b935cde234274d98f86e3303c97b00313854b8314f51b010000000000000000000000000000000201000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020000000000000000180000000000000000000000000000000000000000000000020200000000000000180000000000000000000000000000000000000000000000020200000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000ca9a3b000000000000000000000000000000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedBurnCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(00),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000002::Dummy::SharedMintCapability<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
        ],
        gas_used: 1102200,
        status: Keep(
            EXECUTED,
        ),
    }
    [15] Status: Success
    [16] Transaction 2
    [17] Stage: Compiler
    [18] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(2),
                    name: IdentifierIndex(2),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(3),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(5),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(2),
                    name: IdentifierIndex(6),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(7),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Drop, Store, ],
                        [Store, ],
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                        Struct(StructHandleIndex(2)),
                        Struct(StructHandleIndex(3)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "KikoCat01",
                ),
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "KikoCatMeta",
                ),
                Identifier(
                    "KikoCatBody",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "init_market",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000111,
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    CallGeneric(0),
                    Ret,
                ],
            },
        },
    )
    [19] Stage: Verifier
    [20] Stage: Serializer
    [21] Stage: Runtime
    [22] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20b39d77c4dda4be81160e2d7ee8ca8ac0e203589f2d48423615e3c4474b6ea3a4010000000000000000000000000000022201000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220000000000000000180000000000000000000000000000000000000000000002220100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000001::Event::EventHandleGenerator,
                        Value(070000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0000000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::NFTSelling<0x00000000000000000000000000000111::KikoCat01::KikoCatMeta, 0x00000000000000000000000000000111::KikoCat01::KikoCatBody, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000018050000000000000000000000000000000000000000000222000000000000000018060000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [],
        gas_used: 957694,
        status: Keep(
            EXECUTED,
        ),
    }
    [23] Status: Success
    [24] Transaction 3
    [25] Stage: Compiler
    [26] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_sell",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(5),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    ImmBorrowLoc(0),
                    LdU128(9),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [27] Stage: Verifier
    [28] Stage: Serializer
    [29] Stage: Runtime
    [30] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(50c3000000000000000000000000000000ca9a3b000000000000000000000000010000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d030000000000000000000000000000ca9a3b000000000000000000000000010000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(4dc30000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(400d0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(03010000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000204e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000000000000000000018040000000000000000000000000000000000000000000222000000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
        ],
        gas_used: 517068,
        status: Keep(
            EXECUTED,
        ),
    }
    [31] Status: Success
    [32] Transaction 4
    [33] Stage: Compiler
    [34] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_buy",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(1),
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [35] Stage: Verifier
    [36] Stage: Serializer
    [37] Stage: Runtime
    [38] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(60ea000000000000000000000000000000ca9a3b000000000000000000000000020000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b030000000000000000000000000000ca9a3b000000000000000000000000020000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20cd2773a012dd6c19c791a578098e06faac26a205d939e9a4094afc9f46d8d9fd010000000000000000000000000000006601000000000000000000000000000000660100000000000000180000000000000000000000000000000000000000000000660300000000000000180000000000000000000000000000000000000000000000660200000000000000180000000000000000000000000000000000000000000000660100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000066/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(00000000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(605b0300000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(0202000000000000000000000000000000000000000000000000000000000001110100000000000000000000000000000050c300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000010000000000000018040000000000000000000000000000000000000000000222010000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "204e0000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d790455534454204e000000000000000000000000000000000000000000000000000000000066204e0000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445401000000000000000000000000000000204e0000000000000000000000000000204e000000000000000000000000000000000000000000000000000000000066" },
        ],
        gas_used: 535595,
        status: Keep(
            EXECUTED,
        ),
    }
    [39] Status: Success
    [40] Transaction 5
    [41] Stage: Compiler
    [42] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(2),
                    LdU128(6),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [43] Stage: Verifier
    [44] Stage: Serializer
    [45] Stage: Runtime
    [46] TransactionOutput {
        write_set: WriteSet(
            WriteSetMut {
                write_set: [
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(7011010000000000000000000000000000ca9a3b000000000000000000000000030000000000000018030000000000000000000000000000000000000000000002000000000000000018040000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000002/1/0x00000000000000000000000000000001::Token::TokenInfo<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(a068060000000000000000000000000000ca9a3b000000000000000000000000030000000000000018050000000000000000000000000000000000000000000002000000000000000018060000000000000000000000000000000000000000000002),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Account,
                        Value(20c3a0e6c3fc5a877e246f717381ddda8f32834d4c0b5fec222608d040d2254c55010000000000000000000000000000007701000000000000000000000000000000770100000000000000180000000000000000000000000000000000000000000000770300000000000000180000000000000000000000000000000000000000000000770200000000000000180000000000000000000000000000000000000000000000770100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::ETH>,
                        Value(11270000000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000077/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(f0490200000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Account,
                        Value(2033887699a7ce7cff45251a52e4cb1484c3ef16c54b72e3a78f80d630a605ecf2010000000000000000000000000000011101000000000000000000000000000001110300000000000000180000000000000000000000000000000000000000000001110400000000000000180000000000000000000000000000000000000000000001110200000000000000180000000000000000000000000000000000000000000001110100000000000000),
                    ),
                    (
                        0x00000000000000000000000000000111/1/0x00000000000000000000000000000001::Account::Balance<0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(b01e0400000000000000000000000000),
                    ),
                    (
                        0x00000000000000000000000000000222/1/0x00000000000000000000000000000222::NFTMarket::BoxSelling<0x00000000000000000000000000000002::Dummy::ETH, 0x00000000000000000000000000000002::Dummy::USDT>,
                        Value(01030000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000905f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000103000000000000000000000000000000020000000000000018040000000000000000000000000000000000000000000222020000000000000018030000000000000000000000000000000000000000000222),
                    ),
                ],
            },
        ),
        events: [
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d7903455448" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "10270000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Token"), name: Identifier("MintEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("AcceptTokenEvent"), type_params: [] }), event_data: "000000000000000000000000000000020544756d6d790455534454" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "400d0300000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 2, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "01000000000000000000000000000000000000000000000000000000000000020544756d6d790345544800" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119]), index: 0, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("WithdrawEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17]), index: 3, type: Struct(StructTag { address: 0x00000000000000000000000000000001, module: Identifier("Account"), name: Identifier("DepositEvent"), type_params: [] }), event_data: "50c30000000000000000000000000000000000000000000000000000000000020544756d6d79045553445400" },
            ContractEvent { key: EventKey([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxBidEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d79045553445450c300000000000000000000000000000000000000000000000000000000007750c30000000000000000000000000000" },
            ContractEvent { key: EventKey([4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 34]), index: 1, type: Struct(StructTag { address: 0x00000000000000000000000000000222, module: Identifier("NFTMarket"), name: Identifier("BoxSellEvent"), type_params: [] }), event_data: "00000000000000000000000000000111000000000000000000000000000000020544756d6d7903455448000000000000000000000000000000020544756d6d7904555344540100000000000000000000000000000050c3000000000000000000000000000050c3000000000000000000000000000000000000000000000000000000000077" },
        ],
        gas_used: 559802,
        status: Keep(
            EXECUTED,
        ),
    }
    [47] Status: Success
    [48] Transaction 6
    [49] Stage: Compiler
    [50] CompiledScript(
        CompiledScriptMut {
            version: 2,
            module_handles: [
                ModuleHandle {
                    address: AddressIdentifierIndex(0),
                    name: IdentifierIndex(0),
                },
                ModuleHandle {
                    address: AddressIdentifierIndex(1),
                    name: IdentifierIndex(1),
                },
            ],
            struct_handles: [
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(2),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
                StructHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(4),
                    abilities: [Copy, Drop, Store, ],
                    type_parameters: [],
                },
            ],
            function_handles: [
                FunctionHandle {
                    module: ModuleHandleIndex(1),
                    name: IdentifierIndex(3),
                    parameters: SignatureIndex(3),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                    ],
                },
                FunctionHandle {
                    module: ModuleHandleIndex(0),
                    name: IdentifierIndex(5),
                    parameters: SignatureIndex(6),
                    return_: SignatureIndex(1),
                    type_parameters: [
                        [Store, ],
                        [Store, ],
                    ],
                },
            ],
            function_instantiations: [
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(2),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(0),
                    type_parameters: SignatureIndex(4),
                },
                FunctionInstantiation {
                    handle: FunctionHandleIndex(1),
                    type_parameters: SignatureIndex(5),
                },
            ],
            signatures: [
                Signature(
                    [
                        Signer,
                    ],
                ),
                Signature(
                    [],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Struct(StructHandleIndex(0)),
                        Struct(StructHandleIndex(1)),
                    ],
                ),
                Signature(
                    [
                        Reference(Signer),
                        U128,
                        U128,
                    ],
                ),
            ],
            identifiers: [
                Identifier(
                    "NFTMarket",
                ),
                Identifier(
                    "Dummy",
                ),
                Identifier(
                    "ETH",
                ),
                Identifier(
                    "mint_token",
                ),
                Identifier(
                    "USDT",
                ),
                Identifier(
                    "box_bid",
                ),
            ],
            address_identifiers: [
                0x00000000000000000000000000000222,
                0x00000000000000000000000000000002,
            ],
            constant_pool: [
                Constant {
                    type_: U128,
                    data: [
                        16,
                        39,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                    ],
                },
            ],
            type_parameters: [],
            parameters: SignatureIndex(0),
            code: CodeUnit {
                locals: SignatureIndex(1),
                code: [
                    ImmBorrowLoc(0),
                    LdU128(1),
                    LdConst(0),
                    Mul,
                    CallGeneric(0),
                    ImmBorrowLoc(0),
                    LdU128(20),
                    LdConst(0),
                    Mul,
                    CallGeneric(1),
                    ImmBorrowLoc(0),
                    LdU128(3),
                    LdU128(6),
                    LdConst(0),
                    Mul,
                    CallGeneric(2),
                    Ret,
                ],
            },
        },
    )
    [51] Stage: Verifier
    [52] Stage: Serializer
    [53] Stage: Runtime
    [54] Error: an error occurred when executing the transaction, vm status EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 }, txn status Keep(EXECUTION_FAILURE { location: 0x00000000000000000000000000000001::Account, function_definition: 2, code_offset: 1 })
    [55] Status: Failure


[0m[1m[33minfo: [0m[1mSuccessful Matches
[0m    [6] ...: [], gas_used: 9832, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                         49 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [14] ...], gas_used: 1102200, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          63 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [22] ...[], gas_used: 957694, status: [0m[4m[32mKeep(EXECUTED)[0m }))
                                          77 | // check: [0m[4m"Keep(EXECUTED)"[0m

    [30] ...as_used: 517068, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          99 | // check: [0m[4mEXECUTED[0m

    [38] ...as_used: 535595, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          119 | // check: [0m[4mEXECUTED[0m

    [46] ...as_used: 559802, status: Keep([0m[4m[32mEXECUTED[0m) }))
                                          142 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Directives
[0m    165 | // check: [0m[4mEXECUTED[0m


[0m[1m[31merror: [0m[0m[1mUnmatched Errors
[0m    [54] VMExecutionFailure(EXECUTION_FAILURE { status_code: MISSING_DATA, location: 0x00...

thread 'functional-test::testsuite/BoxTest.move' panicked at 'test failed', /Users/bixin/Documents/projects/starcoin/vm/functional-tests/src/testsuite.rs:239:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:23:03[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:23:45[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:23:50[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 60000
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 666666666
[debug] 2
[debug] 0
[debug] 50000
[debug] 3
[debug] 60000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 0
[debug] 888888888
[debug] 23232323233
[debug] 56565656565
[debug] 999999999
[debug] 140000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:23:55[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 60000
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 666666666
[debug] 2
[debug] 0
[debug] 50000
[debug] 3
[debug] 60000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 0
[debug] 888888888
[debug] 23232323233
[debug] 56565656565
[debug] 999999999
[debug] 140000
[debug] 3
[debug] 80000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 60000
[debug] 888888888
[debug] 23232323233
[debug] 56565656565
[debug] 999999999
[debug] 120000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[224C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[33m[0m[33m[40m[43m[30m took 3s[0m[30m[43m[43m[30m [0m[30m[43m[43m[30m [0m[30m[43m[43m[30m[37m[0m[37m[43m[47m[30m at 15:24:56[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[19Dpublish            [12Dclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:27:04[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanfunctional-test Box[19Dpublish            [12D[?1l>[?2004l
]2;move publish]1;move[0m[1m[38;5;9merror[0m[1m: [0m

     [0m[34m┌[0m[0m[34m──[0m src/modules/NFTMarket.move:285:24 [0m[34m───[0m
     [0m[34m│[0m
 [0m[34m285[0m [0m[34m│[0m         let balance2 = [0m[31mAccount::balance<PayToken>(&box_sell_info.bider)[0m;
     [0m[34m│[0m                        [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Invalid call of '0x1::Account::balance'. Invalid argument for parameter 'a0'[0m
     [0m[34m·[0m
 [0m[34m285[0m [0m[34m│[0m         let balance2 = Account::balance<PayToken>([0m[34m&box_sell_info.bider[0m);
     [0m[34m│[0m                                                   [0m[34m-------------------- The type: '&address'[0m
     [0m[34m│[0m

    [0m[34m┌[0m[0m[34m──[0m build/mv_interfaces/0x00000000000000000000000000000001/Account.move:53:46 [0m[34m───[0m
    [0m[34m│[0m
 [0m[34m53[0m [0m[34m│[0m     native public fun balance<T0: store>(a0: [0m[34maddress[0m): u128;
    [0m[34m│[0m                                              [0m[34m------- Is not compatible with: 'address'[0m
    [0m[34m│[0m

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[233C[0m[49m[31m[0m[31m[41m[33m 1[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:27:08[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:29:55[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanpublish[?1l>[?2004l
]2;move publish]1;move[0m[1m[38;5;9merror[0m[1m: [0m

     [0m[34m┌[0m[0m[34m──[0m src/modules/NFTMarket.move:285:24 [0m[34m───[0m
     [0m[34m│[0m
 [0m[34m285[0m [0m[34m│[0m         let balance2 = [0m[31mAccount::balance<PayToken>(&box_sell_info.bider)[0m;
     [0m[34m│[0m                        [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Invalid call of '0x1::Account::balance'. Invalid argument for parameter 'a0'[0m
     [0m[34m·[0m
 [0m[34m285[0m [0m[34m│[0m         let balance2 = Account::balance<PayToken>([0m[34m&box_sell_info.bider[0m);
     [0m[34m│[0m                                                   [0m[34m-------------------- The type: '&address'[0m
     [0m[34m│[0m

    [0m[34m┌[0m[0m[34m──[0m build/mv_interfaces/0x00000000000000000000000000000001/Account.move:53:46 [0m[34m───[0m
    [0m[34m│[0m
 [0m[34m53[0m [0m[34m│[0m     native public fun balance<T0: store>(a0: [0m[34maddress[0m): u128;
    [0m[34m│[0m                                              [0m[34m------- Is not compatible with: 'address'[0m
    [0m[34m│[0m

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[233C[0m[49m[31m[0m[31m[41m[33m 1[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:29:59[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  [?1l>[?2004l
]2;move clean]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:30:28[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m cleanpublish[?1l>[?2004l
]2;move publish]1;move[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[235C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37m[0m[37m[40m[47m[30m at 15:30:32[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m publishclean  publishclean  publishclean  functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
test functional-test::testsuite/BoxTest.move ... [0m[31mFAILED[0m
Error: other error: already has account 'jackma'

failures:
    functional-test::testsuite/BoxTest.move

test result: [0m[31mFAILED[0m. 0 passed; 1 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[231C[0m[49m[31m[0m[31m[41m[33m 101[0m[33m[41m[41m[33m ✘[0m[33m[41m[41m[33m [0m[33m[41m[41m[33m[37m[0m[37m[41m[47m[30m at 15:30:39[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h[32mmove[39m functional-test Box[?1l>[?2004l
]2;move functional-test Box]1;move
running 1 tests
addr: 0x0000000000000000000000000a550c18, account: Some(AccountResource { authentication_key: [152, 137, 252, 243, 65, 19, 18, 29, 165, 152, 120, 127, 167, 96, 205, 29, 186, 153, 94, 113, 32, 78, 167, 81, 219, 162, 60, 42, 206, 174, 68, 111], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), key_rotation_capability: Some(KeyRotationCapabilityResource { account_address: 0x0000000000000000000000000a550c18 }), withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, deposit_events: EventHandle { count: 1, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 85, 12, 24]) }, sequence_number: 0 })
addr: 0x00000000000000000000000000000001, account: Some(AccountResource { authentication_key: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], withdrawal_capability: Some(WithdrawCapabilityResource { account_address: 0x00000000000000000000000000000001 }), key_rotation_capability: None, withdraw_events: EventHandle { count: 0, key: EventKey([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, deposit_events: EventHandle { count: 0, key: EventKey([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, accept_token_events: EventHandle { count: 1, key: EventKey([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]) }, sequence_number: 1 })
[debug] 3
[debug] 0
[debug] 20000
[debug] 2
[debug] 60000
[debug] 222222222
[debug] 50000
[debug] 2
[debug] 222222222
[debug] 666666666
[debug] 2
[debug] 0
[debug] 50000
[debug] 3
[debug] 60000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 0
[debug] 888888888
[debug] 23232323233
[debug] 56565656565
[debug] 999999999
[debug] 140000
[debug] 3
[debug] 80000
[debug] 222222222
[debug] 90000
[debug] 3
[debug] 222222222
[debug] 60000
[debug] 888888888
[debug] 23232323233
[debug] 56565656565
[debug] 999999999
[debug] 120000
[debug] 0
[debug] 78787878787878
[debug] 120000
test functional-test::testsuite/BoxTest.move ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 filtered out

[1m[7m%[27m[1m[0m                                                                                                                                                                                                                                                                                                                        ]2;bixin@zhangcheng:~/Documents/projects/kiko-nft]1;..ects/kiko-nft[0m[49m[39m[K
[0m[27m[24m[J[0m[49m[39m[0m[47m[38;5;232m [0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37m[0m[37m[44m[44m[38;5;254m  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/Documents/projects/[1m[38;5;254m[44m[38;5;255mkiko-nft[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34m[0m[34m[43m[43m[30m on  [30m main [30m!1 [30m?2[0m[30m[43m[43m[30m [0m[30m[43m[49m[33m[0m[33m[49m[39m [0m[49m[39m[K[224C[0m[49m[30m[0m[30m[40m[32m [0m[32m[40m[40m[32m✔[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[33m[0m[33m[40m[43m[30m took 3s[0m[30m[43m[43m[30m [0m[30m[43m[43m[30m [0m[30m[43m[43m[30m[37m[0m[37m[43m[47m[30m at 15:31:10[0m[30m[47m[47m[30m [0m[30m[47m[47m[30m [0m[30m[47m[49m[39m[254D[?1h=[?2004h